{
  "name": "revelar",
  "version": "0.3.4",
  "description": "Command line tool to create stunning presentations using Reveal.js",
  "readmeFilename": "README.md",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:pirelenito/revelar.git"
  },
  "preferGlobal": "true",
  "bin": {
    "revelar": "bin/revelar"
  },
  "author": {
    "name": "Paulo Ragonha",
    "email": "paulo@ragonha.me",
    "url": "http://paulo.ragonha.me"
  },
  "license": "MIT",
  "homepage": "https://github.com/pirelenito/revelar",
  "dependencies": {
    "connect": "^2.14.4",
    "ejs": "^1.0.0",
    "express": "^4.0.0",
    "ncp": "^0.5.0",
    "reveal.js": "^2.6.2",
    "rsvp": "^3.0.6",
    "underscore": "^1.6.0"
  },
  "readme": "# Revelar\n\nCreate stunning presentations in **Markdown** using [Reveal.js](https://github.com/hakimel/reveal.js) from the comfort of your command line.\n\nStart by installing the `revelar` utility globally:\n\n```shell\nnpm install --g revelar\n```\n\nThen, from within any folder you can start the revelar server:\n\n```shell\ncd my_presentation\nrevelar\n```\n\nOpen the presentation server in your browser at [http://localhost:8000](http://localhost:8000).\n\nAnd start coding your slides in **Markdown**.\n\n## Anatomy of a slide\n\nRevelar will load as many markdown files are available in the folder its executed, creating for each a separate section in your presentation. It will sort the files by name while loading, so you can have files like `01-introduction.md`, `02-about-me.md` and so on to enforce your sequence.\n\nTo tell Revelar where a slide ends and another begins you need to place a special separator: `--`.\n\nSo a Markdown file with three slides would look like:\n\n```markdown\n# Revelar\n## This is awesome\n\n[paulo.ragonha.me](http://paulo.ragonha.me)\n\n[@pirelenito](http://twitter.com/pirelenito)\n\n--\n# A second slide\n\n--\n# And a third\n```\n\n## Configuration\n\nTo change the default parameters that are passed while initializing [Reveal.js](https://github.com/hakimel/reveal.js), create a `revelar_config.json` file at the same folder of the slide files and add any of the [available Reveal.js config options](https://github.com/hakimel/reveal.js#configuration).\n\nBellow is an example that disables the controls, disables the progress indicator and changes the transition effect:\n\n```json\n{\n  \"transition\": \"linear\",\n  \"controls\": false,\n  \"progress\": false\n}\n```\n\n## Themes\n\nIt is possible to change the theme of the presentation from the [available Reveal.js themes](https://github.com/hakimel/reveal.js#theming) by specifying it in the `revelar_config.json` file:\n\n```json\n{\n  \"theme\": \"sky\"\n}\n```\n\n### Custom themes\n\nYou can place your custom theme files inside the `themes` folder and use them the same way as a default theme.\n\n## Bootstraping a new presentation\n\nIf you want a template to start a new presentation, Revelar can help you with that.\n\n```bash\nrevelar create my-project\n```\n\nThis command will create a new folder called `my-project` with some sample slides, a config file and a theme.\n\n## Acknowledgments\n\nThis is build on top of the amazing [Reveal.js](https://github.com/hakimel/reveal.js) framework.\n\n## Author\n\n[Paulo Ragonha](http://paulo.ragonha.me).\n",
  "bugs": {
    "url": "https://github.com/pirelenito/revelar/issues"
  },
  "_id": "revelar@0.3.4",
  "_from": "revelar@"
}
